import logging
import asyncio
import requests
import nest_asyncio
import schedule
import pytz
from datetime import datetime, timedelta
from telegram import Bot
from telegram.ext import Application, CommandHandler
from flask import Flask
import threading

# === ุฅุนุฏุงุฏุงุช ุงูุจูุช ===
BOT_TOKEN = "8075622956:AAEKedhb3JAIOWlSx_vn3kGZOoPhiYwscJo"
CHAT_ID = "@wahmidf"

# ุฅุนุฏุงุฏ ุงููููุน
CITY = "Amman"
COUNTRY = "Jordan"
TIMEZONE = "Asia/Amman"

# ุชููุฆุฉ
logging.basicConfig(level=logging.INFO)
nest_asyncio.apply()
app = Application.builder().token(BOT_TOKEN).build()
flask_app = Flask(__name__)
local_tz = pytz.timezone(TIMEZONE)


# ูุฑุฏ ูููู
async def send_daily_ward():
    msg = (
        "๐ *ูุฑุฏ ุงูููู*\n\n"
        "๐ ูุง ุชูุณู ุชูุงูุฉ ูุง ุชูุณุฑ ูู ุงููุฑุขู ุงููุฑูู ุงูููู.\n"
        "ุงุฌุนู ูููุณู ูุฑุฏูุง ุซุงุจุชูุงุ ููู ุตูุญุฉ ูุงุญุฏุฉ ๐\n\n"
        "๏ดฟ ูุฑุชู ุงููุฑุขู ุชุฑุชููุง ๏ดพ"
    )
    await app.bot.send_message(chat_id=CHAT_ID, text=msg, parse_mode="Markdown")

def split_and_send(text, chat_id):
    max_length = 4096
    for i in range(0, len(text), max_length):
        chunk = text[i:i+max_length]
        asyncio.create_task(app.bot.send_message(chat_id=chat_id, text=chunk))

# ุฃุฐูุงุฑ
async def send_morning_azkar():
    msg = """โ๏ธ ุฃุฐูุงุฑ ุงูุตุจุงุญ ูุงููุฉ:

ุฃุตุจุญูุง ูุฃุตุจุญ ุงูููู ูููุ ูุงูุญูุฏ ูููุ ูุง ุฅูู ุฅูุง ุงููู ูุญุฏู ูุง ุดุฑูู ููุ ูู ุงูููู ููู ุงูุญูุฏ ููู ุนูู ูู ุดูุก ูุฏูุฑ.
ุฑุจ ุฃุณุฃูู ุฎูุฑ ูุง ูู ูุฐุง ุงูููู ูุฎูุฑ ูุง ุจุนุฏูุ ูุฃุนูุฐ ุจู ูู ุดุฑ ูุง ูู ูุฐุง ุงูููู ูุดุฑ ูุง ุจุนุฏู.
ุฑุจ ุฃุนูุฐ ุจู ูู ุงููุณู ูุณูุก ุงููุจุฑุ ุฑุจ ุฃุนูุฐ ุจู ูู ุนุฐุงุจ ูู ุงููุงุฑ ูุนุฐุงุจ ูู ุงููุจุฑ.

ุงูููู ุจู ุฃุตุจุญูุงุ ูุจู ุฃูุณููุงุ ูุจู ูุญูุงุ ูุจู ูููุชุ ูุฅููู ุงููุดูุฑ.

ุงูููู ุฃูุช ุฑุจู ูุง ุฅูู ุฅูุง ุฃูุชุ ุฎููุชูู ูุฃูุง ุนุจุฏูุ ูุฃูุง ุนูู ุนูุฏู ููุนุฏู ูุง ุงุณุชุทุนุชุ ุฃุนูุฐ ุจู ูู ุดุฑ ูุง ุตูุนุชุ
ุฃุจูุก ูู ุจูุนูุชู ุนููุ ูุฃุจูุก ุจุฐูุจูุ ูุงุบูุฑ ููุ ูุฅูู ูุง ูุบูุฑ ุงูุฐููุจ ุฅูุง ุฃูุช.

ุฑุถูุช ุจุงููู ุฑุจุงูุ ูุจุงูุฅุณูุงู ุฏููุงูุ ูุจูุญูุฏ ๏ทบ ูุจูุงู.

ุงูููู ุฅูู ุฃุตุจุญุช ุฃุดูุฏู ูุฃุดูุฏ ุญููุฉ ุนุฑุดูุ ูููุงุฆูุชูุ ูุฌููุน ุฎููู ุฃูู ุฃูุช ุงููู ูุง ุฅูู ุฅูุง ุฃูุชุ ูุญุฏู ูุง ุดุฑูู ููุ
ูุฃู ูุญูุฏุงู ุนุจุฏู ูุฑุณููู. (ุฃุฑุจุน ูุฑุงุช)

ุงูููู ูุง ุฃุตุจุญ ุจู ูู ูุนูุฉ ุฃู ุจุฃุญุฏ ูู ุฎููู ูููู ูุญุฏู ูุง ุดุฑูู ููุ ููู ุงูุญูุฏ ููู ุงูุดูุฑ.

ุงูููู ุนุงููู ูู ุจุฏููุ ุงูููู ุนุงููู ูู ุณูุนูุ ุงูููู ุนุงููู ูู ุจุตุฑูุ ูุง ุฅูู ุฅูุง ุฃูุช. (ุซูุงุซ ูุฑุงุช)

ุงูููู ุฅูู ุฃุนูุฐ ุจู ูู ุงูููุฑ ูุงูููุฑุ ูุฃุนูุฐ ุจู ูู ุนุฐุงุจ ุงููุจุฑุ ูุง ุฅูู ุฅูุง ุฃูุช. (ุซูุงุซ ูุฑุงุช)

ุญุณุจู ุงููู ูุง ุฅูู ุฅูุง ูู ุนููู ุชูููุช ููู ุฑุจ ุงูุนุฑุด ุงูุนุธูู. (ุณุจุน ูุฑุงุช)

ุงูููู ุฅูู ุฃุณุฃูู ุงูุนูู ูุงูุนุงููุฉ ูู ุงูุฏููุง ูุงูุขุฎุฑุฉ.
ุงูููู ุฅูู ุฃุณุฃูู ุงูุนูู ูุงูุนุงููุฉ ูู ุฏููู ูุฏููุงู ูุฃููู ููุงูู.
ุงูููู ุงุณุชุฑ ุนูุฑุงุชูุ ูุขูู ุฑูุนุงุชูุ ูุงุญูุธูู ูู ุจูู ูุฏู ููู ุฎูููุ ูุนู ููููู ูุนู ุดูุงููุ ููู ููููุ
ูุฃุนูุฐ ุจุนุธูุชู ุฃู ุฃุบุชุงู ูู ุชุญุชู.

ูุง ุญู ูุง ููููุ ุจุฑุญูุชู ุฃุณุชุบูุซุ ุฃุตูุญ ูู ุดุฃูู ูููุ ููุง ุชูููู ุฅูู ููุณู ุทุฑูุฉ ุนูู.

ุฃุตุจุญูุง ุนูู ูุทุฑุฉ ุงูุฅุณูุงูุ ูุนูู ูููุฉ ุงูุฅุฎูุงุตุ ูุนูู ุฏูู ูุจููุง ูุญูุฏ ๏ทบุ ูุนูู ููุฉ ุฃุจููุง ุฅุจุฑุงููู ุญูููุงู ูุณููุงูุ ููุง ูุงู ูู ุงููุดุฑููู.

ุณุจุญุงู ุงููู ูุจุญูุฏู. (ูุฆุฉ ูุฑุฉ)

ูุง ุฅูู ุฅูุง ุงููู ูุญุฏู ูุง ุดุฑูู ููุ ูู ุงูููู ููู ุงูุญูุฏ ููู ุนูู ูู ุดูุก ูุฏูุฑ. (ุนุดุฑ ูุฑุงุช ุฃู ูุฆุฉ ูุฑุฉ)

ุฃุณุชุบูุฑ ุงููู ูุฃุชูุจ ุฅููู. (ูุฆุฉ ูุฑุฉ)

ุฃุนูุฐ ุจูููุงุช ุงููู ุงูุชุงูุงุช ูู ุดุฑ ูุง ุฎูู. (ุซูุงุซ ูุฑุงุช)

ุจุณู ุงููู ุงูุฐู ูุง ูุถุฑ ูุน ุงุณูู ุดูุก ูู ุงูุฃุฑุถ ููุง ูู ุงูุณูุงุก ููู ุงูุณููุน ุงูุนููู. (ุซูุงุซ ูุฑุงุช)

ูุฑุงุกุฉ ุขูุฉ ุงููุฑุณู: ๏ดฟุงููููู ูุง ุฅููููู ุฅููุงู ูููู ุงููุญููู ุงููููููููู...๏ดพ

ููุฑุงุกุฉ ุณูุฑ ุงูุฅุฎูุงุตุ ูุงููููุ ูุงููุงุณุ ุซูุงุซ ูุฑุงุช.
"""
    split_and_send(msg, CHAT_ID)

async def send_evening_azkar():
    msg = """๐ ุฃุฐูุงุฑ ุงููุณุงุก ูุงููุฉ:

ุฃูุณููุง ูุฃูุณู ุงูููู ูููุ ูุงูุญูุฏ ูููุ ูุง ุฅูู ุฅูุง ุงููู ูุญุฏู ูุง ุดุฑูู ููุ ูู ุงูููู ููู ุงูุญูุฏ ููู ุนูู ูู ุดูุก ูุฏูุฑ.
ุฑุจ ุฃุณุฃูู ุฎูุฑ ูุง ูู ูุฐู ุงููููุฉ ูุฎูุฑ ูุง ุจุนุฏูุงุ ูุฃุนูุฐ ุจู ูู ุดุฑ ูุง ูู ูุฐู ุงููููุฉ ูุดุฑ ูุง ุจุนุฏูุง.
ุฑุจ ุฃุนูุฐ ุจู ูู ุงููุณู ูุณูุก ุงููุจุฑุ ุฑุจ ุฃุนูุฐ ุจู ูู ุนุฐุงุจ ูู ุงููุงุฑ ูุนุฐุงุจ ูู ุงููุจุฑ.

ุงูููู ุจู ุฃูุณููุงุ ูุจู ุฃุตุจุญูุงุ ูุจู ูุญูุงุ ูุจู ูููุชุ ูุฅููู ุงููุตูุฑ.

ุงูููู ุฃูุช ุฑุจู ูุง ุฅูู ุฅูุง ุฃูุชุ ุฎููุชูู ูุฃูุง ุนุจุฏูุ ูุฃูุง ุนูู ุนูุฏู ููุนุฏู ูุง ุงุณุชุทุนุชุ ุฃุนูุฐ ุจู ูู ุดุฑ ูุง ุตูุนุชุ
ุฃุจูุก ูู ุจูุนูุชู ุนููุ ูุฃุจูุก ุจุฐูุจูุ ูุงุบูุฑ ููุ ูุฅูู ูุง ูุบูุฑ ุงูุฐููุจ ุฅูุง ุฃูุช.

ุฑุถูุช ุจุงููู ุฑุจุงูุ ูุจุงูุฅุณูุงู ุฏููุงูุ ูุจูุญูุฏ ๏ทบ ูุจูุงู.

ุงูููู ุฅูู ุฃูุณูุช ุฃุดูุฏู ูุฃุดูุฏ ุญููุฉ ุนุฑุดูุ ูููุงุฆูุชูุ ูุฌููุน ุฎููู ุฃูู ุฃูุช ุงููู ูุง ุฅูู ุฅูุง ุฃูุชุ ูุญุฏู ูุง ุดุฑูู ููุ
ูุฃู ูุญูุฏุงู ุนุจุฏู ูุฑุณููู. (ุฃุฑุจุน ูุฑุงุช)

ุงูููู ูุง ุฃูุณู ุจู ูู ูุนูุฉ ุฃู ุจุฃุญุฏ ูู ุฎููู ูููู ูุญุฏู ูุง ุดุฑูู ููุ ููู ุงูุญูุฏ ููู ุงูุดูุฑ.

ุงูููู ุนุงููู ูู ุจุฏููุ ุงูููู ุนุงููู ูู ุณูุนูุ ุงูููู ุนุงููู ูู ุจุตุฑูุ ูุง ุฅูู ุฅูุง ุฃูุช. (ุซูุงุซ ูุฑุงุช)

ุงูููู ุฅูู ุฃุนูุฐ ุจู ูู ุงูููุฑ ูุงูููุฑุ ูุฃุนูุฐ ุจู ูู ุนุฐุงุจ ุงููุจุฑุ ูุง ุฅูู ุฅูุง ุฃูุช. (ุซูุงุซ ูุฑุงุช)

ุญุณุจู ุงููู ูุง ุฅูู ุฅูุง ูู ุนููู ุชูููุช ููู ุฑุจ ุงูุนุฑุด ุงูุนุธูู. (ุณุจุน ูุฑุงุช)

ุงูููู ุฅูู ุฃุณุฃูู ุงูุนูู ูุงูุนุงููุฉ ูู ุงูุฏููุง ูุงูุขุฎุฑุฉ.
ุงูููู ุฅูู ุฃุณุฃูู ุงูุนูู ูุงูุนุงููุฉ ูู ุฏููู ูุฏููุงู ูุฃููู ููุงูู.
ุงูููู ุงุณุชุฑ ุนูุฑุงุชูุ ูุขูู ุฑูุนุงุชูุ ูุงุญูุธูู ูู ุจูู ูุฏู ููู ุฎูููุ ูุนู ููููู ูุนู ุดูุงููุ ููู ููููุ
ูุฃุนูุฐ ุจุนุธูุชู ุฃู ุฃุบุชุงู ูู ุชุญุชู.

ูุง ุญู ูุง ููููุ ุจุฑุญูุชู ุฃุณุชุบูุซุ ุฃุตูุญ ูู ุดุฃูู ูููุ ููุง ุชูููู ุฅูู ููุณู ุทุฑูุฉ ุนูู.

ุฃูุณููุง ุนูู ูุทุฑุฉ ุงูุฅุณูุงูุ ูุนูู ูููุฉ ุงูุฅุฎูุงุตุ ูุนูู ุฏูู ูุจููุง ูุญูุฏ ๏ทบุ ูุนูู ููุฉ ุฃุจููุง ุฅุจุฑุงููู ุญูููุงู ูุณููุงูุ ููุง ูุงู ูู ุงููุดุฑููู.

ุณุจุญุงู ุงููู ูุจุญูุฏู. (ูุฆุฉ ูุฑุฉ)

ูุง ุฅูู ุฅูุง ุงููู ูุญุฏู ูุง ุดุฑูู ููุ ูู ุงูููู ููู ุงูุญูุฏ ููู ุนูู ูู ุดูุก ูุฏูุฑ. (ุนุดุฑ ูุฑุงุช ุฃู ูุฆุฉ ูุฑุฉ)

ุฃุณุชุบูุฑ ุงููู ูุฃุชูุจ ุฅููู. (ูุฆุฉ ูุฑุฉ)

ุฃุนูุฐ ุจูููุงุช ุงููู ุงูุชุงูุงุช ูู ุดุฑ ูุง ุฎูู. (ุซูุงุซ ูุฑุงุช)

ุจุณู ุงููู ุงูุฐู ูุง ูุถุฑ ูุน ุงุณูู ุดูุก ูู ุงูุฃุฑุถ ููุง ูู ุงูุณูุงุก ููู ุงูุณููุน ุงูุนููู. (ุซูุงุซ ูุฑุงุช)

ูุฑุงุกุฉ ุขูุฉ ุงููุฑุณู: ๏ดฟุงููููู ูุง ุฅููููู ุฅููุงู ูููู ุงููุญููู ุงููููููููู...๏ดพ

ููุฑุงุกุฉ ุณูุฑ ุงูุฅุฎูุงุตุ ูุงููููุ ูุงููุงุณุ ุซูุงุซ ูุฑุงุช.
"""
    split_and_send(msg, CHAT_ID)

# ุชุฐููุฑ ุจุงูุตูุงู
async def send_fasting_reminder():
    msg = (
        "๐ ุชุฐููุฑ: ุตูุงู ุงูุงุซููู ูุงูุฎููุณ ุณูุฉ ุนู ุงููุจู ๏ทบ\n\n"
        "ูุงู ุฑุณูู ุงููู ๏ทบ:\n"
        "ยซุชูุนุฑุถ ุงูุฃุนูุงู ููู ุงูุงุซููู ูุงูุฎููุณ ูุฃุญุจ ุฃู ููุนุฑุถ ุนููู ูุฃูุง ุตุงุฆูยป\n\n"
        "๐ ูุงุญุฑุต ุนูู ุงูุตูุงู ุฅู ุงุณุชุทุนุช."
    )
    await app.bot.send_message(chat_id=CHAT_ID, text=msg)

def schedule_fasting_reminders():
    schedule.every().sunday.at("17:00").do(lambda: asyncio.create_task(send_fasting_reminder()))
    schedule.every().wednesday.at("17:00").do(lambda: asyncio.create_task(send_fasting_reminder()))

# ููุงููุช ุงูุตูุงุฉ
def get_today_prayer_times():
    url = f"https://api.aladhan.com/v1/timingsByCity?city={CITY}&country={COUNTRY}&method=99&fajr=18&isha=18"
    response = requests.get(url)
    data = response.json()

    if data['code'] != 200:
        return None

    timings = data['data']['timings']

    return {
        "Fajr": timings['Fajr'],
        "Sunrise": timings['Sunrise'],
        "Dhuhr": timings['Dhuhr'],
        "Asr": timings['Asr'],
        "Maghrib": timings['Maghrib'],
        "Isha": timings['Isha']
    }



# ุณูู ุงูุตููุงุช
prayer_sunnah = {
    "Fajr": "๐ ุณูุฉ ุงููุฌุฑ: ุฑูุนุชุงู ูุจููุฉ ูุคูุฏุฉ",
    "Dhuhr": "๐ ุณูุฉ ุงูุธูุฑ: 4 ูุจููุฉ + 2 ุจุนุฏูุฉ",
    "Asr": "",
    "Maghrib": "๐ ุณูุฉ ุงููุบุฑุจ: 2 ุจุนุฏูุฉ",
    "Isha": "๐ ุณูุฉ ุงูุนุดุงุก: 2 ุจุนุฏูุฉ + ุงููุชุฑ"
}

# ุถุจุท ุงูุชูููุช ูู ุนููุงู ุฅูู UTC
def adjust_time_to_utc(time_str):
    jordan_time = local_tz.localize(datetime.strptime(time_str, "%H:%M"))
    utc_time = jordan_time.astimezone(pytz.utc)
    return utc_time.strftime("%H:%M")

async def send_jumuah_sunnah():
    msg = (
        "๐ *ุณูู ููู ุงูุฌูุนุฉ*\n\n"
        "1๏ธโฃ ุงูุงุบุชุณุงู ูุงูุชุทูุจ.\n"
        "2๏ธโฃ ุงูุชุจููุฑ ุฅูู ุตูุงุฉ ุงูุฌูุนุฉ.\n"
        "3๏ธโฃ ูุฑุงุกุฉ ุณูุฑุฉ ุงูููู.\n"
        "4๏ธโฃ ุงูุฅูุซุงุฑ ูู ุงูุตูุงุฉ ุนูู ุงููุจู ๏ทบ.\n"
        "5๏ธโฃ ุงูุฏุนุงุก ูู ุงูุณุงุนุฉ ุงูุฃุฎูุฑุฉ ูุจู ุงููุบุฑุจ.\n\n"
        "๐ค ุฌูุนุฉ ูุจุงุฑูุฉ!"
    )
    await app.bot.send_message(chat_id=CHAT_ID, text=msg, parse_mode="Markdown")

# ุชุฐููุฑ ุนูุฏ ุงูุตูุงุฉ
prayer_names_ar = {
    "Fajr": "ุงููุฌุฑ",
    "Sunrise": "ุงูุดุฑูู",
    "Dhuhr": "ุงูุธูุฑ",
    "Asr": "ุงูุนุตุฑ",
    "Maghrib": "ุงููุบุฑุจ",
    "Isha": "ุงูุนุดุงุก"
}
async def send_prayer_reminder(prayer_name): 
    sunnah = prayer_sunnah.get(prayer_name)
    prayer_ar = prayer_names_ar.get(prayer_name, prayer_name)

    msg = f"๐ ูุง ุชูุณู ุตูุงุฉ {prayer_ar}."

    if sunnah:
        msg += f"\n\n{ sunnah }"

    await app.bot.send_message(chat_id=CHAT_ID, text=msg, parse_mode="Markdown")

def create_reminder_task(prayer):
    return lambda: asyncio.create_task(send_prayer_reminder(prayer))

def schedule_prayer_reminders():
    schedule.clear('prayers')
    times = get_today_prayer_times()
    if not times:
        return
    for prayer, time_str in times.items():
        utc_time = adjust_time_to_utc(time_str)
        schedule.every().day.at(utc_time).do(create_reminder_task(prayer)).tag('prayers')

# ุฃูุงูุฑ ุงูุจูุช
async def start(update, context):
    await update.message.reply_text("๐ ุจูุช ูุฑุฏ ูุงูุดูุณ! ูุฑุณู ูุฑุฏ ููููุ ุฃุฐูุงุฑุ ูุชุฐููุฑ ุจุงูุตูุงุฉ.")



app.add_handler(CommandHandler("start", start))

# ุงูููุงู ุงููุฌุฏููุฉ
def schedule_tasks():
    schedule.every().day.at("06:00").do(lambda: asyncio.create_task(send_daily_ward()))
    schedule.every().day.at("07:00").do(lambda: asyncio.create_task(send_morning_azkar()))
    schedule.every().day.at("16:00").do(lambda: asyncio.create_task(send_evening_azkar()))
    schedule.every().day.at("00:01").do(schedule_prayer_reminders)
    schedule.every().friday.at("06:00").do(lambda: asyncio.create_task(send_jumuah_sunnah()))

    schedule_prayer_reminders()
    schedule_fasting_reminders()

# ุงูุณูุฑูุฑ ูููุญุต
@flask_app.route('/')
def home():
    return "โ ุงูุจูุช ูุนูู"

def run_web():
    flask_app.run(host="0.0.0.0", port=10000)

# ุงูุชุดุบูู
async def scheduler_loop():
    while True:
        schedule.run_pending()
        await asyncio.sleep(60)

def start_server():
    threading.Thread(target=run_web, daemon=True).start()

async def main():
    start_server()
    await app.bot.send_message(chat_id=CHAT_ID, text="โ ุชู ุชุดุบูู ุงูุจูุช.")
    schedule_tasks()
    asyncio.create_task(scheduler_loop())
    await app.run_polling()


if __name__ == "__main__":
    asyncio.run(main())
